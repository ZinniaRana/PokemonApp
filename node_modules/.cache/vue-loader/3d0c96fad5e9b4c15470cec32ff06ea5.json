{"remainingRequest":"/Users/zinniarana/Desktop/PokemonVueApp/poke-app/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/zinniarana/Desktop/PokemonVueApp/poke-app/src/components/PokemonList.vue?vue&type=template&id=45f18d91","dependencies":[{"path":"/Users/zinniarana/Desktop/PokemonVueApp/poke-app/src/components/PokemonList.vue","mtime":1639351875869},{"path":"/Users/zinniarana/Desktop/PokemonVueApp/poke-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zinniarana/Desktop/PokemonVueApp/poke-app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/zinniarana/Desktop/PokemonVueApp/poke-app/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/zinniarana/Desktop/PokemonVueApp/poke-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zinniarana/Desktop/PokemonVueApp/poke-app/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICA8ZGl2IGNsYXNzPSJsaXN0Ij4KICAgICAgICA8YXJ0aWNsZSB2LWZvcj0iKHBva2Vtb24sIGluZGV4KSBpbiBwb2tlbW9ucyIgCiAgICAgICAgICAgICAgICAgOmtleT0iJ3Bva2UnK2luZGV4IgogICAgICAgICAgICAgICAgIEBjbGljaz0ic2V0UG9rZW1vblVybChwb2tlbW9uLnVybCkiPgogICAgICAgICAgICA8aW1nIDpzcmM9ImltYWdlVXJsICsgcG9rZW1vbi5pZCArICcucG5nJyIKICAgICAgICAgICAgICAgICB3aWR0aD0iOTUiCiAgICAgICAgICAgICAgICAgaGVpZ2h0PSI5NiIgCiAgICAgICAgICAgICAgICAgYWx0PSIiPgogICAgICAgICAgICA8aDM+e3sgcG9rZW1vbi5uYW1lIH19PC9oMz4KICAgICAgICA8L2FydGljbGU+CiAgICA8L2Rpdj4KCiAgICA8YnV0dG9uIAogICAgICAgIHYtaWY9InNob3dMb2FkTW9yZSIKICAgICAgICA6ZGlzYWJsZWQ9ImxvYWRDb3VudD09PTkiCiAgICAgICAgY2xhc3M9ImJ0biBsb2FkLWJ0biIKICAgICAgICBAY2xpY2s9ImxvYWRNb3JlKCkiPgogICAgICAgTG9hZCBNb3JlCiAgICA8L2J1dHRvbj4KCiAgICA8cGFnaW5hdGlvbiAKICAgICAgICB2LWlmPSJzaG93UGFnaW5hdGlvbiIKICAgICAgICB2LW1vZGVsPSJwYWdlIiAKICAgICAgICA6cmVjb3Jkcz0iMTUwIiAKICAgICAgICA6cGVyLXBhZ2U9IjMwIiAKICAgICAgICBAcGFnaW5hdGU9ImxvYWRQb2tlbW9ucygkZXZlbnQpIi8+CiAgIAo="},{"version":3,"sources":["/Users/zinniarana/Desktop/PokemonVueApp/poke-app/src/components/PokemonList.vue"],"names":[],"mappings":"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","file":"/Users/zinniarana/Desktop/PokemonVueApp/poke-app/src/components/PokemonList.vue","sourceRoot":"","sourcesContent":["<template>\n    <div class=\"list\">\n        <article v-for=\"(pokemon, index) in pokemons\" \n                 :key=\"'poke'+index\"\n                 @click=\"setPokemonUrl(pokemon.url)\">\n            <img :src=\"imageUrl + pokemon.id + '.png'\"\n                 width=\"95\"\n                 height=\"96\" \n                 alt=\"\">\n            <h3>{{ pokemon.name }}</h3>\n        </article>\n    </div>\n\n    <button \n        v-if=\"showLoadMore\"\n        :disabled=\"loadCount===9\"\n        class=\"btn load-btn\"\n        @click=\"loadMore()\">\n       Load More\n    </button>\n\n    <pagination \n        v-if=\"showPagination\"\n        v-model=\"page\" \n        :records=\"150\" \n        :per-page=\"30\" \n        @paginate=\"loadPokemons($event)\"/>\n   \n</template>\n\n<script>\n    import Pagination from 'v-pagination-3';\n\n    export default {\n        props: [\n            'imageUrl',\n            'apiUrl',\n            'showPagination',\n            'showLoadMore'\n        ],\n        data() {\n            return {\n                pokemons: [],\n                page: 1,\n                loadCount: 0\n            }\n        },\n        components: {\n            Pagination\n        },\n        methods: {\n            fetchPokemons(offset=0, limit=50) {\n                const axios = require('axios');\n                axios\n                .get(`${this.apiUrl}?offset=${offset}&limit=${limit}`)\n                .then((response) => {\n                    if(this.showPagination){\n                        this.pokemons=[];\n                    }\n\n                    if(\"results\" in response.data)\n                    {\n                        response.data.results.forEach(pokemon => \n                        {\n                            pokemon.id = pokemon.url\n                                            .split('/')\n                                            .filter((part) => {\n                                                return !!part\n                                            })\n                                            .pop();\n\n                            this.pokemons.push(pokemon);\n                        });\n                    } else {\n                        console.log('results key not found');\n                    }\n                })\n                .catch((error) => {\n                    console.log(error);    \n                })\n            },\n            setPokemonUrl(url) {\n                this.$emit('setPokemonUrl', url);\n            },\n            loadPokemons($event) {\n                console.log($event);\n                this.fetchPokemons((this.page-1) * 30, 30);\n            },\n            loadMore() {\n                this.loadCount++;\n                this.fetchPokemons(this.loadCount * 15, 15) \n            }\n        },\n        mounted() {\n            this.currentUrl = this.apiUrl;\n            this.fetchPokemons();\n        },\n    }\n</script>"]}]}